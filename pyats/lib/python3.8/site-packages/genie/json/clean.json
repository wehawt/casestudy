{"change_boot_variable": {"nxos": {"module_name": "stages.stages", "doc": "\n    Clean yaml file schema:\n    -----------------------\n    devices:\n        <device>:\n            change_boot_variable:\n                images:\n                    kickstart: <kickstart image> (Optional)\n                    system: <system image> (Mandatory)\n                copy_vdc_all: <Copy on all VDCs, 'Boolean'> (Optional)\n                timeout: <Execute timeout in seconds, 'int'> (Optional)\n                max_time: <Maximum time section will take for checks in seconds, 'int'> (Optional)\n                check_interval: <Time interval, 'int'> (Optional)\n                stabilize_time: <Time in seconds till boot variables stabilization, 'int'> (Optional)\n                standby_copy_max_time: <Maximum time section will take for checks in seconds, 'int'> (Optional)\n                standby_copy_check_interval: <Time interval, 'int'> (Optional)\n\n\n    Example:\n    --------\n    devices:\n        N95_1:\n            change_boot_variable:\n                images:\n                    kickstart: bootflash:/kisckstart.gbin\n                    system: bootflash:/system.gbin\n                copy_vdc_all: True\n                timeout: 150\n                max_time: 300\n                check_interval: 20\n                stabilize_time: 100\n                standby_copy_max_time: 100\n                standby_copy_check_interval: 10\n\n    Flow:\n    -----\n    before:\n        copy_to_device (Optional, If images to set as boot variable is not already on device)\n    after:\n        write_erase (Optional, user wants to reload with current running configuration or not)\n    ", "uid": "change_boot_variable", "url": "https://github.com/CiscoTestAutomation/genielibs/tree/master/src/genie/clean/stages/nxos/stages.py#L23"}, "iosxe": {"module_name": "stages.stages", "doc": "\n    Clean yaml file schema:\n    -----------------------\n    devices:\n      <device>:\n        change_boot_variable:\n          images ('list'): List of images to copy (Mandatory)\n          timeout ('int'): Execute timeout in seconds\n                           Default 300 (Optional)\n          max_time ('int'): Maximum time to wait while saving running-config\n                            to startup-config in seconds.\n                            Default 300 (Optional)\n          check_interval ('int'): Time interval while checking save running\n                                  config to startup-config completed in seconds.\n                                  Default 30 (Optional)\n          write_memory ('bool'): Execute 'write memory' after setting BOOT var\n                                 Default False (Optional)\n          config_register ('str'): Value to set config-register for reload\n                                   Default '0x2102' (Optional)\n\n    Example:\n    --------\n    devices:\n      N95_1:\n        change_boot_variable:\n          images:\n            - harddisk:/Genie-12351822-iedge-asr-uut\n          timeout: 150\n          max_time: 300\n          check_interval: 20\n\n    Flow:\n    -----\n    before:\n      copy_to_device (Optional, If images to set as boot variable is not already on device)\n    after:\n      write_erase (Optional, user wants to reload with current running configuration or not)\n    ", "uid": "change_boot_variable", "url": "https://github.com/CiscoTestAutomation/genielibs/tree/master/src/genie/clean/stages/iosxe/stages.py#L27", "cat9k": {"module_name": "stages.stages", "doc": "\n    Clean yaml file schema:\n    -----------------------\n    devices:\n      <device>:\n        change_boot_variable:\n          images ('list'): List of images to copy (Mandatory)\n          timeout ('int'): Execute timeout in seconds\n                           Default 300 (Optional)\n          max_time ('int'): Maximum time to wait while saving running-config\n                            to startup-config in seconds.\n                            Default 300 (Optional)\n          check_interval ('int'): Time interval while checking save running\n                                  config to startup-config completed in seconds.\n                                  Default 30 (Optional)\n          write_memory ('bool'): Execute 'write memory' after setting BOOT var\n                                 Default False (Optional)\n          config_register ('str'): Value to set config-register for reload\n                                   Default '0x2102' (Optional)\n\n    Example:\n    --------\n    devices:\n      N95_1:\n        change_boot_variable:\n          images:\n            - harddisk:/Genie-12351822-iedge-asr-uut\n          timeout: 150\n          max_time: 300\n          check_interval: 20\n\n    Flow:\n    -----\n    before:\n      copy_to_device (Optional, If images to set as boot variable is not already on device)\n    after:\n      write_erase (Optional, user wants to reload with current running configuration or not)\n    ", "uid": "change_boot_variable", "url": "https://github.com/CiscoTestAutomation/genielibs/tree/master/src/genie/clean/stages/iosxe/cat9k/stages.py#L27"}}}, "apply_configuration": {"com": {"module_name": "stages.stages", "doc": "\n    Apply configuration on the device, either by providing a file and/or\n    straight configuration\n\n    Clean yaml file schema:\n    -----------------------\n    devices:\n      <device>:\n        apply_configuration:\n          configuration: <Configuration block to be applied, 'str'> (Optional)\n          file: <Configuration file> (Optional)\n          config_timeout: <Timeout in seconds, 'int'> (Optional)\n          config_stable_time: <Time for configuration stability in seconds, 'int'> (Optional)\n          copy_vdc_all: <To copy on all VDCs or not, 'boolean'> (Optional)\n          max_time: <Maximum time section will take for checks in seconds, 'int'> (Optional)\n          check_interval: <Time interval, 'int'> (Optional)\n\n    Example:\n    --------\n    devices:\n      N95_1:\n        apply_configuration:\n          configuration: |\n            interface ethernet2/1\n              no shutdown\n          file: bootflash:/ISSUCleanGolden.cfg\n          config_timeout: 600\n          config_stable_time: 10\n          copy_vdc_all: True\n          max_time: 300\n          check_interval: 20\n\n    Flow:\n    -----\n    before:\n      None\n    after:\n      None\n    ", "uid": "apply_configuration", "url": "https://github.com/CiscoTestAutomation/genielibs/tree/master/src/genie/clean/stages/stages.py#L933"}}, "connect": {"com": {"module_name": "stages.stages", "doc": "\n    Checks if the connection to device is available\n    ", "uid": "connect", "url": "https://github.com/CiscoTestAutomation/genielibs/tree/master/src/genie/clean/stages/stages.py#L33"}}, "copy_file_on_device": {"com": {"module_name": "stages.stages", "doc": "\n    Clean yaml file schema:\n    -----------------------\n    devices:\n      <device>:\n        copy_file_on_device:\n          copy_dir ('str'): Directory containing file to be backed up (Mandatory)\n          copy_file ('str'): File to be backed up (Mandatory)\n\n    Example:\n    --------\n    devices:\n      PE1:\n        copy_file_on_device:\n          copy_dir: bootflash:\n          copy_file: ISSUCleanGolden.cfg\n\n    Flow:\n    -----\n    before:\n      None\n    after:\n      write_erase (Optional, Backup configuration file then perform write erase)\n    ", "uid": "copy_file_on_device", "url": "https://github.com/CiscoTestAutomation/genielibs/tree/master/src/genie/clean/stages/stages.py#L1073"}}, "copy_to_device": {"com": {"module_name": "stages.stages", "doc": "\n    Clean yaml file schema:\n    -----------------------\n    devices:\n      <device>:\n        copy_to_device:\n          origin:\n            files ('list'): Image files location on the server (Mandatory)\n            hostname ('str'): Hostname or address of the server (Mandatory)\n          destination:\n            directory ('str'): Location on the device to copy images (Mandatory)\n          protocol ('str'): Protocol used for copy operation (Mandatory)\n          verify_num_images ('bool'): Verify number of images provided by user\n                                      for clean is correct\n                                      Default True (Optional)\n          expected_num_images ('int'): Number of images expected to be provided\n                                       by user for clean\n                                       Default 1 (Optional)\n          vrf ('str'): Vrf name if applicable \n                       Default None (Optional)\n          timeout ('int'): Copy operation timeout in seconds\n                           Default 300 (Optional)\n          compact ('bool'): Compact copy mode if supported by the device\n                            Default False (Optional)\n          protected_files ('list'): File patterns that shouldn't be deleted\n                                    Default None (Optional)\n          if_exist_still_copy ('bool'): If image file already exists on device,\n                                        still copy the file to the device\n                                        Default False (Optional)\n          skip_deletion ('bool'): Do not delete any files even if there isn't\n                                  any space on device\n                                  Default False (Optional)\n          copy_attempts ('int'): Number of times to attempt copying image files\n                                 Default 1 (no retry) (Optional)\n          check_file_stability ('bool'): Verify if the files are still being\n                                         copied on the file server\n                                         Default False (Optional)\n          stability_check_tries ('int'): Max number of checks that can be done\n                                         when checking file stability\n                                         Default 3 (Optional)\n          stability_check_delay ('int'): Delay between tries when checking file\n                                         stability in seconds\n                                         Default 2 (Optional)\n          min_free_space_percent ('int') : Minimum acceptable free disk space\n                                           percentage trying to reach by \n                                           deleting unprotected files\n                                           Default None (Optional)\n          use_kstack ('bool'): Use faster version of copy with limited options\n                               Default False (Optional)\n\n    Example:\n    --------\n    devices:\n      ASR1_1:\n        copy_to_device:\n          protocol: sftp\n          origin:\n            hostname: server-1\n            files:\n            - /home/cisco/asr1k.bin\n          timeout: 300\n          destination:\n              directory: harddisk:/\n\n    Flow:\n    -----\n    before:\n      None\n    after:\n      None\n    ", "uid": "copy_to_device", "url": "https://github.com/CiscoTestAutomation/genielibs/tree/master/src/genie/clean/stages/stages.py#L423"}}, "copy_to_linux": {"com": {"module_name": "stages.stages", "doc": "\n    Clean yaml file schema:\n    -----------------------\n        devices:\n            <device>:\n                copy_to_linux:\n                    origin:\n                        files: <File location on remote server or local disk, 'list'> (Mandatory)\n                        hostanme: <Hostname or address of the server, if not provided the file will be treated as local. 'str'> (Optional)\n                    destination:\n                        directory: <Location on the file server, 'str'> (Mandatory)\n                        hostname: <Hostname or address of the file server, if not provided the directory will be treated as local.\n                                    This value is optional only when the hostname under origin is also optional. 'str'> (Optional)\n                    protocol: <Protocol used for copy operation, 'str', default sftp> (Optional)\n                    always_copy: <always copy even when the same file already exists 'bool', default True> (Optional)\n                    timeout: <Copy operation timeout in seconds, default 300 'int'> (Optional)\n                    check_image_length: <check if image length exceeds certain limit 'bool', default False> (Optional)\n                    image_length_limit: <custom image length limit, defaults 63, 'int'>  (Optional)\n                    append_hostname: <append device hostname to the end of image while copying 'bool', default False> (Optional)\n                    attempts: <number of times to retry if copy failed, default 1 (no retry) 'int'> (Optional)\n                    check_file_stability: <Verify if the files are still being copied on the file server, 'bool' default False> (Optional)\n                    unique_file_name: <append a six digit random number to the end of file name to make it unique, 'bool', default False> (Optional)\n\n    Example:\n    --------\n        devices:\n            N95_1:\n                copy_to_linux:\n                    protocol: sftp\n                    origin:\n                        hostname: server-1\n                        files:\n                        - /home/cisco/kickstart.bin\n                        - /home/cisco/system.bin\n                    timeout: 300\n                    destination:\n                        hostname: file-server\n                        directory: /auto/tftp-ssr/\n\n\n    Flow:\n    -----\n        before:\n            None\n        after:\n            None\n    ", "uid": "copy_to_linux", "url": "https://github.com/CiscoTestAutomation/genielibs/tree/master/src/genie/clean/stages/stages.py#L111"}}, "delete_file_from_device": {"com": {"module_name": "stages.stages", "doc": "\n    Clean yaml file schema:\n    -----------------------\n    devices:\n      <device>:\n        delete_file_from_device:\n          delete_dir ('str'): Directory containing file to be deleted (Mandatory)\n          delete_file ('str'): File to be deleted up (Mandatory)\n\n    Example:\n    --------\n    devices:\n      PE1:\n        delete_file_from_device:\n          delete_dir: 'bootflash:'\n          delete_file: ISSUCleanGolden.cfg_backup\n\n    Flow:\n    -----\n    before:\n      write_erase (Optional, Perform write erase then delete the backed up file)\n    after:\n      None\n    ", "uid": "delete_file_from_device", "url": "https://github.com/CiscoTestAutomation/genielibs/tree/master/src/genie/clean/stages/stages.py#L1133"}}, "delete_files_from_server": {"com": {"module_name": "stages.stages", "doc": " delete images from server\n        Clean yaml file schema:\n    -----------------------\n        devices:\n            <device>:\n                delete_files_from_server:\n                  server: <Hostname or address of the server `str`> (optional)\n                  files: <list of images to delete, list> (Optional)\n                  protocol: <protocol used for deletion, defaults to sftp. str> (Optional)\n\n    Example:\n    --------\n        devices:\n            N95_1:\n                delete_files_from_server:\n                    server: 1.1.1.1\n                    files:\n                    - /home/cisco/kickstart.bin\n                    protocol: sftp\n\n    Flow:\n    -----\n        before:\n            None\n        after:\n            copy_to_device (optional, delete the image from server to save space after copy is done)\n    ", "uid": "delete_files_from_server", "url": "https://github.com/CiscoTestAutomation/genielibs/tree/master/src/genie/clean/stages/stages.py#L1212"}}, "ping_server": {"com": {"module_name": "stages.stages", "doc": "\n    Clean yaml file schema:\n    -----------------------\n        devices:\n            <device>:\n                ping_server:\n                  server: <Hostname or address of the server to ping `str`> (Mandatory)\n                  vrf: <Vrf used in ping `str`> (Optional)\n                  timeout: <timeout for ping command. default 60 seconds> (Optional)\n\n    Example:\n    --------\n        devices:\n            N95_1:\n                ping_server:\n                  server: server-1\n                  vrf: management\n\n    Flow:\n    -----\n        before:\n            copy_to_device (Optional, checks if server is reachable before trying to copy)\n        after:\n            None\n    ", "uid": "ping_server", "url": "https://github.com/CiscoTestAutomation/genielibs/tree/master/src/genie/clean/stages/stages.py#L55"}}, "reload": {"com": {"module_name": "stages.stages", "doc": "\n    Clean yaml file schema:\n    -----------------------\n    devices:\n      <device>:\n        reload:\n          prompt_recovery: <Enable/Disable prompt recovery feature, 'boolean'> (Optional)\n          sleep_after_reload: <Time to sleep after reload, 'int'> (Optional)\n          credentials: <Credential name defined in the testbed yaml file to be used during reload, 'str'> (Optional)\n          timeout: <reload timeout value, defaults 800 seconds. 'int'> (Optional)\n\n    Example:\n    --------\n    devices:\n      N95_1:\n        reload:\n          prompt_recovery: True\n          sleep_after_reload: 120\n          credentials: clean_reload_creds\n\n    Flow:\n    -----\n    before:\n      change_boot_variable (Mandatory)\n      apply_golden_config (Optional, configure device to come up with specific startup configs)\n    after:\n      change_boot_variable (Optional, to verify current boot variable and set next)\n    ", "uid": "reload", "url": "https://github.com/CiscoTestAutomation/genielibs/tree/master/src/genie/clean/stages/stages.py#L845"}}, "verify_running_image": {"com": {"module_name": "stages.stages", "doc": "\n    Clean yaml file schema:\n    -----------------------\n    devices:\n      <device>:\n        verify_running_image:\n          images: <Images reloaded on the device, 'list'> (Mandatory)\n\n    Example:\n    --------\n    devices:\n      N95_1:\n        verify_running_image:\n          images:\n          - test_image.gbin\n\n    Flow:\n    -----\n    before:\n      reload (Mandatory, Reload device first then verify it)\n    after:\n      None\n    ", "uid": "verify_running_image", "url": "https://github.com/CiscoTestAutomation/genielibs/tree/master/src/genie/clean/stages/stages.py#L1030"}}, "write_erase": {"com": {"module_name": "stages.stages", "doc": "\n    Clean yaml file schema:\n    -----------------------\n    devices:\n      <device>:\n        write_erase:\n\n    Example:\n    --------\n    devices:\n      N95_1:\n        write_erase:\n\n    Flow:\n    -----\n    before:\n      copy_file_on_device (Optional, Backup configuration file then perform write erase)\n    after:\n      delete_file_from_device (Optional, Delete the backed up configuration file)\n      apply_golden_config (Optional, user wants to apply golden config or not)\n    ", "uid": "write_erase", "url": "https://github.com/CiscoTestAutomation/genielibs/tree/master/src/genie/clean/stages/stages.py#L798"}}, "tftp_boot": {"iosxe": {"module_name": "stages.stages", "doc": "\n    Clean yaml file schema:\n    -----------------------\n        tftp_boot:\n            image: <Image to boot with `str`> (Mandatory)\n            ip_address: <Management ip address to configure to reach to the TFTP server `str`> (Mandatory)\n            subnet_mask: <Management subnet mask `str`> (Mandatory)\n            gateway: <Management gateway `str`> (Mandatory)\n            tftp_server: <tftp server is reachable with management interface> (Mandatory)\n\n    Example:\n    --------\n    tftp_boot:\n        image:\n          - /auto/some-location/that-this/image/stay-isr-image.bin\n        ip_address: [10.1.7.126, 10.1.7.127]\n        gateway: 10.1.7.1\n        subnet_mask: 255.255.255.0\n        tftp_server: 10.1.7.251\n\n    There is more than one ip address, one for each supervisor.\n\n    Flow:\n    -----\n        Before:\n            Any\n        After:\n            Connect\n    ", "uid": "tftp_boot", "url": "https://github.com/CiscoTestAutomation/genielibs/tree/master/src/genie/clean/stages/iosxe/stages.py#L239"}}}